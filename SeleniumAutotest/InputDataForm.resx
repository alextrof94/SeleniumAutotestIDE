<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAALAAAAEQAAABEAAAARAAAAEQAA
        ABEAAAARAAAAEQAAABEAAAARAAAAEQAAABEAAAARAAAAEQAAABEAAAARAAAAEQAAABEAAAARAAAAEQAA
        ABEAAAARAAAAEQAAABEAAAALAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKQAAAGcAAAByAAAAcgAA
        AHIAAAByAAAAcgAAAHIAAAByAAAAcgAAAHIAAAByAAAAcgAAAHIAAAByAAAAcgAAAHIAAAByAAAAcgAA
        AHIAAAByAAAAcgAAAHIAAABxAAAAcgAAAGgAAAArAAAAAAAAAAAECAgABw8PAwECAkYAAACtAAAAxQAA
        AMQAAADEAAAAxAAAAMQAAADEAAAAxAAAAMQAAADEAAAAxAAAAMQAAADEAAAAxAAAAMQAAADEAAAAxAAA
        AMQAAADEAAAAxAAAAMQAAADEAAAAxAAAAMEAAQGiAAAAhAAAAGIAAAAKAAAAAAECAgAAAAA+BwsL5Cc5
        Of8vRUX/LkRE/y5ERP8tQ0P/LUND/ytDQv8rQkL/K0JC/ypCQv8qQUH/KUFB/ylBQf8oQED/KEBB/yhA
        Qf8nQED/Jj8//yY/P/8lP0D/JT8//yU+P/8lPz//HjM0/wQJCfEAAACfAAAAagAAAA0AAAAAAAAAAAAA
        AHAgLy//kdDQ/57k5P+c4uL/meDg/5ff3/+W3t7/lN3d/5Lc3P+R29v/j9ra/43Y2f+M19j/i9bX/4nW
        1v+H1NX/htPU/4TS0/+D0tP/gdHR/4DQ0P9+z9D/fc7P/33P0P9xvL3/GCoq/wAAALkAAABpAAAADQAA
        AAAAAAAAAAAAdCc4OP+d4OD/qPHx/6bv7/+l7u7/o+3t/6Ds7P+e6ur/nenq/5ro6P+Z5+f/mObm/5Xl
        5f+U4+T/k+Pj/5Hh4v+Q4OH/jt/h/4zf4P+L3d//itzd/4fb3P+G2tv/htvc/3rKy/8dMjL/AAAAuwAA
        AGkAAAANAAAAAAAAAAAAAABzJzg4/57g4P+q8fH/p+/u/6Xv7v+k7u7/o+3t/6Ds7P+e6ur/nenq/5ro
        6P+Z5+f/l+bl/5Xk5P+T4uP/kuHj/4/h3/9x5ZL/auWI/4ne2v+L3d7/iNzc/4fa2/+G29z/esrL/x0y
        Mv8AAAC7AAAAaQAAAA0AAAAAAAAAAAAAAHMnODj/oOHh/6zy8v+p8PD/pu7u/57l5f+b4eH/meDg/5ff
        3/+W3t7/lN3d/5Lc3P+U39//l+Xl/5Xk5P+S4+H/ceeM/0TuFP9B7RT/c+Of/43d4f+K3d3/iNzc/4fc
        3P98ysv/HTIz/wAAALsAAABpAAAADQAAAAAAAAAAAAAAcyg5OP+h4uL/rfPz/6zz8/+JwsL/NU1N/ytA
        QP8sQED/LEBA/ypAQP8qPz//KT09/0FiYv+Q2dn/mebo/37nq/9J7iD/Zul3/13qXP9N6zX/g+DH/4zd
        4P+K3d3/id3d/33LzP8dMjL/AAAAuwAAAGkAAAANAAAAAAAAAAAAAABzKDk5/6Pj4/+v9fT/rfPz/5TQ
        0P9VeHj/TW5u/0xubv9MbW7/S21t/0psbP9Ia2v/W4iI/5Te3v+Z5+j/iOfB/3fomv+R49//h+TG/0zs
        Mv9f6Gj/i9/b/4zd3v+L3t7/f8zN/x4yMv8AAAC7AAAAaQAAAA0AAAAAAAAAAAAAAHMoOTn/pOTk/7D1
        9f+u8/L/rfPz/6309P+q8vL/qPHx/6fw8f+m8PD/pO7u/6Ht7f+g7e3/nenp/5rn5/+Z5uf/mOXp/5Xj
        5f+U4ub/deaZ/0ntKP9747T/jt7i/4ze3/+Azs7/HjMz/wAAALsAAABpAAAADQAAAAAAAAAAAAAAcyk5
        Of+m5eX/svb2/6/08/+u8/L/rfLy/6vx8f+p8PD/qO/v/6Xv7/+k7e3/ouzs/5/r6/+e6er/nOjp/5rn
        5/+Y5ub/mOXn/5bk5v+R493/eeam/4fizP+P3+H/jt/h/4HOz/8eMzP/AAAAuwAAAGkAAAANAAAAAAAA
        AAAAAABzKTo5/6fm5f+z9/f/sfX0/6/08/+u8/L/rPLx/6vx8f+p7/D/p+/u/6Xv7v+k7e3/ouzs/5/r
        6/+e6er/nOjp/5vn6f+O6M3/iOfF/5Xk5f+U4ub/kuLj/5Dh4f+P4OH/g8/Q/x8zM/8AAAC7AAAAaQAA
        AA0AAAAAAAAAAAAAAHMpOjr/qOfm/7X4+P+y9vX/svb2/7L49/+x9/f/r/b1/6319P+s8/P/qfPy/6jy
        8v+m8PD/ouzs/5/r6/+e6ev/jurI/1jvPP9S7zL/iefE/5bk5v+T4uP/kuLi/5Hi4v+E0NH/HzM0/wAA
        ALsAAABpAAAADQAAAAAAAAAAAAAAcyk6Ov+p6Of/tvn5/7T4+P+i39//bpqa/2aQkP9mkJD/ZI+P/2OO
        jv9jjo7/YY2M/3Klpf+g5+f/o+zu/5LszP9b8T7/WPA2/1PvLv9j7Vz/lObg/5Xk5f+T4uP/k+Pk/4bR
        0v8gMzT/AAAAuwAAAGkAAAANAAAAAAAAAAAAAABzKjo6/6vp6f+4+vr/t/r6/4zBwf8nODj/Gygo/xsp
        Kf8bKCj/Gygo/xsoKP8ZJib/OFNS/5vf3/+m7vH/iO6w/2bwXf+R68z/guys/03wH/956pP/mOXn/5Xk
        5P+U5OT/iNLT/yA0NP8AAAC7AAAAaQAAAA0AAAAAAAAAAAAAAHMqOjr/rOrp/7n8+/+3+fn/svT0/6Ti
        4v+h3t7/n93d/57c3P+c3Nz/m9va/5rZ2f+d4OD/pu7u/6bv7v+h7un/nuzl/6Dr7P+c6uf/be5y/1Pw
        M/+M6Mn/mOXn/5Xl5f+J09P/ITQ0/wAAALsAAABpAAAADQAAAAAAAAAAAAAAcys7O/+t6ur/uvz7/7j6
        +v+3+fn/t/r5/7X5+f+0+Pf/svf2/7H29f+v9fT/rvT0/6zy8v+p8PD/p+/u/6Xu7v+k7e7/ouzs/6Dr
        7f+U69P/au5r/4jqv/+Z5uj/mObm/4rU1P8hNDT/AAAAuwAAAGkAAAANAAAAAAAAAAAAAABzKzs7/6/r
        6/+8/f3/ufv6/7j7+v+3+fn/tvj4/7T39/+z9vb/sfX1/7D09P+u9PP/rPLy/6vx8f+q8PD/p+/v/6bv
        7/+k7u7/ouzs/6Dr6/+c6ub/m+nn/5vn6P+Z6Oj/jdbW/yI1Nf8AAAC7AAAAaQAAAA0AAAAAAAAAAAAA
        AHMqOzr/rurq/7v8/P+5+vr/uPn5/7f5+P+2+Pf/tPf2/7P19f+x9fX/r/Tz/67z8v+t8vH/q/Hw/6nv
        8P+o7u7/pe3t/6Ts7P+j7Oz/oOvr/57p6v+d6On/m+fn/5rn5/+N1dX/IjU1/wAAALsAAABpAAAADQAA
        AAAAAAAAAAAAcxEYGP9GYWH/TGlp/0toaP9LZ2j/S2dn/0pnZ/9JZmf/SWZn/0dmZv9HZWb/RmVl/0Zl
        Zf9FZGX/RGRl/0RjZP9DY2T/QmNk/0JiZP9BYmP/QGFj/z9hYv8/YWL/PmFj/zhZWv8NFhb/AAAAuwAA
        AGkAAAANAAAAAAAAAAAAAABzEw8N/ldEPP9iS0H/YUo+/2FJPP9hSDv/XkQ3/1xBMv9cQDD/XD4u/1w9
        Kv9dOyf/XTok/103Iv9dNR7/XTQb/10zGP9dMBb/XS8S/10uD/9dKwv/XSoI/10oBP9dKAH/VyMA/xUI
        AP8AAAC7AAAAaQAAAA0AAAAAAAAAAAAAAHQ7Lyn+p4Z2/nVdUf92XU//dltN/3NYSf+4inD//bqT//q0
        i//6sIX/+q19//qpdP/6pG3/+p5m//qaXf/6lVX/+pBN//qMRf/6hzz/+oM0//p+K//6eiP/+ncY//t0
        Dv/qaAP/OxgA/wAAALwAAABgAAAACgAAAAAAAAAAAAAAcDUqJf+dfm//blhM/29XS/9vVkn/bFNE/7GE
        a//2tY//86+H//Orgf/zqHn/86Rx//Ofav/zmWP/85Va//ORU//zjUv/84hD//ODOv/zgDL/83wq//N3
        If/zcxf/9HEN/99jA/8zFAD/AAAApgAAACcAAAAAAAAAAAAAAAAAAAA9CgcH4UAyLP9QPjb/Tz00/088
        Mv9POzH/TDgt/0o1Kf9KNCf/SjMm/0oyI/9KMCD/Si8f/0otHP9KLBr/SisX/0opFf9KKBL/SicQ/0om
        Df9KJAr/SiII/0ohBf9LIQL/PRoB/woEAOEAAABBAAAAAAAAAAAAAAAAAAAAAAAAAAMAAABDAAAAgQAA
        AIYAAACGAAAAhgAAAIYAAACGAAAAhgAAAIYAAACGAAAAhgAAAIYAAACGAAAAhgAAAIYAAACGAAAAhgAA
        AIYAAACGAAAAhgAAAIYAAACGAAAAhgAAAIYAAACBAAAAQwAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////////wAAAB8AAAAcAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAA
        AADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAA
        AAHAAAADwAAAA/////////////////////8=
</value>
  </data>
</root>